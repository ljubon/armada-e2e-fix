services:
  kubernetes:
    image: bsycorp/kind:v1.17.10
    privileged: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:10080/kubernetes-ready"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s
    ports:
      - 10080:10080
  setup-namespace:
    image: bsycorp/kind:v1.17.10
    entrypoint: ["sh", "-c", "until wget -q -O /dev/null http://kubernetes:10080/kubernetes-ready; do sleep 10; done; wget -q -O - http://kubernetes:10080/config | sed 's/localhost/kubernetes/' > /tmp/kubeconfig; KUBECONFIG=/tmp/kubeconfig kubectl apply -f /setup/namespace-with-anonymous-user.yaml"]
    volumes:
      - .:/setup
    depends_on:
      - kubernetes
  redis:
    image: redis
    depends_on:
      - setup-namespace
  nats:
    image: nats-streaming
    command: -p 4223 -m 8223
    depends_on:
      - setup-namespace
  display-node-stats:
    image: bsycorp/kind:v1.17.10
    entrypoint: ["sh", "-c", "until wget -q -O /dev/null http://kubernetes:10080/kubernetes-ready; do sleep 1; done; wget -q -O - http://kubernetes:10080/config | sed 's/localhost/kubernetes/' > /tmp/kubeconfig; while :; do KUBECONFIG=/tmp/kubeconfig kubectl get nodes -o jsonpath=\"{.items[0].status['capacity', 'allocatable']['cpu', 'memory']}\" | xargs; sleep 1; done"]
    volumes:
      - .:/setup
    depends_on:
      - kubernetes
      - setup-namespace
  server:
    image: armada
    command: --config /setup/nats/armada-config.yaml
    ports:
      - 50051:50051
    volumes:
      - .:/setup
    depends_on:
      - redis
      - nats
      - setup-namespace
  executor:
    image: armada-executor
    entrypoint: ["sh", "-c", "until wget -q -O /dev/null http://kubernetes:10080/kubernetes-ready; do sleep 1; done; wget -q -O - http://kubernetes:10080/config | sed 's/localhost/kubernetes/' > /tmp/kubeconfig; KUBECONFIG=/tmp/kubeconfig ./executor --config /setup/executor-config.yaml"]
    volumes:
      - .:/setup
    depends_on:
      - kubernetes
      - server
      - setup-namespace